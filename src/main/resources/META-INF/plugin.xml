<idea-plugin>
    <id>org.softeng.Design-Pattern-Doc</id>
    <name>Design Pattern Doc</name>
    <version>1.0-SNAPSHOT</version>
    <vendor>FilipeLemos</vendor>

    <description><![CDATA[
    Note: This is still an experimental version.

    The Design Pattern Doc is a plugin that helps understanding software in terms of its design patterns, by reducing
    the mutual feedback loop between programming and documenting.

    It contains the following features:
    - Highlights and suggests documentation for source-code objects that play a role in a detected design pattern
    (Design patterns are detected with the help of the DP-CORE tool, which we do not own).
    - Displays pattern hints at the end of the lines where documented pattern participants are found (Object -> PatternName:Role).
    - UML pattern instance representation by hovering on top of documented pattern participants. The UML is generated
    by plantuml tool, which we do not own.
    - Manual creation and edition of pattern instance's documentation.
    - Definition of other design patterns, not initially supported by the plugin. These definitions will not be used in
    the automatic detection of design patterns by the DP-CORE.

    Requires:
    - Graphviz installed in the OS to view the UML class diagrams
    ]]></description>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.platform</depends>

    <extensions defaultExtensionNs="com.intellij">
        <applicationService serviceImplementation="storage.PluginState"/>

        <localInspection language="JAVA"
                          displayName="Suggestion of Pattern Role"
                          groupName="Example refactorings"
                          groupPath="Java"
                          enabledByDefault="true"
                          level="WARNING"
                          implementationClass="detection.PatternSuggestionsInspection"/>

        <editor.linePainter implementation="visualization.PatternHints"/>

        <lang.documentationProvider language="JAVA"
                                    order="first"
                                    implementationClass="visualization.PatternDocumentation"/>

        <refactoring.elementListenerProvider
                                    order="first"
                                    implementation="refactorings.ClassNameRefactoringListenerProvider"/>
    </extensions>

    <actions>
        <group id="DesignPatternDoc.popUpMenu" text="DesignPatternDoc" popup="true">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <action class="actions.DocumentPatternAction" id="documentPattern" text="Document Pattern Instance"/>
            <action class="actions.DocumentPatternByRightClickingElementAction" id="documentPatternRightClickElement" text="Document Pattern Instance Played by Object"/>
            <action class="actions.EditDocumentationAction" id="editDocumentPatternPopUp" text="Edit Pattern Instance Documentation"/>
            <action class="actions.EditDocumentationByRightClickingElementAction" id="editDocumentRightClickElement" text="Edit Pattern Instance Played by Object"/>
            <action class="actions.DefinePatternAction" id="definePattern" text="Define Design Pattern"/>
        </group>
    </actions>
</idea-plugin>